name: forwarding
concurrency: forwarding-${{ github.ref }}

on:
  workflow_dispatch:
#  push:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: forwarding
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - uses: actions/checkout@v1

      # TODO: this belongs to "mid", remove from "early"
      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: projects/642254565385/locations/global/workloadIdentityPools/github/providers/github
          service_account: deployment@ddd-vienna-sample.iam.gserviceaccount.com
        if: github.ref == 'refs/heads/main'

      # TODO: this belongs to "mid", remove from "early"
      - name: Set up GCP SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: ">= 363.0.0"
        if: github.ref == 'refs/heads/main'

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "6.0.313"

      - run: dotnet tool restore

      - run: dotnet restore
        name: Restore
        working-directory: ./forwarding

      - run: dotnet build Forwarding.sln --no-restore
        name: Build
        working-directory: ./forwarding

      - run: dotnet test --no-build
        name: Test
        working-directory: ./forwarding

      # TODO: this belongs to "mid", remove from "early"
      - name: Build Release version
        run: dotnet build -c Release Forwarding.sln
        if: github.ref == 'refs/heads/main'

      # TODO: this belongs to "mid", remove from "early"
      - name: Publish PubSub
        run: >-
          dotnet publish src/Application.PubSubForwarding/Application.PubSubForwarding.fsproj
          --no-build
          -c Release
          -o artifacts/pubsub-application
        if: github.ref == 'refs/heads/main'

      - name: Publish Webhook
        run: >-
          dotnet publish src/Application.WebhookForwarding/Application.WebhookForwarding.fsproj
          --no-build
          -c Release
          -o artifacts/webhook-application
        if: github.ref == 'refs/heads/main'
      # TODO: this belongs to "mid", remove from "early"
      - name: Build Pubsub Docker Container
        run: >-
          gcloud builds submit --tag eu.gcr.io/ddd-vienna-sample/pubsub-application:$GITHUB_SHA 
          --project ddd-vienna-sample
        working-directory: forwarding/artifacts/pubsub-application
        if: github.ref == 'refs/heads/main'
      - name: Build Webhook Docker Container
        run: >-
          gcloud builds submit --tag eu.gcr.io/ddd-vienna-sample/webhook-application:$GITHUB_SHA 
          --project ddd-vienna-sample
        working-directory: forwarding/artifacts/webhook-application
        if: github.ref == 'refs/heads/main'
  terraform:
    name: Terraform
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: forwarding/terraform
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v1

      - uses: hashicorp/setup-terraform@v2

      - name: Format
        run: terraform fmt -check
        continue-on-error: false

      # TODO: this belongs to "mid", remove from "early"
      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: projects/642254565385/locations/global/workloadIdentityPools/github/providers/github
          service_account: deployment@ddd-vienna-sample.iam.gserviceaccount.com

      - name: Init
        run: terraform init -backend-config=backend-config.hcl

      - name: Validate
        run: terraform validate

      - name: Setup Terraform variables
        run: |
          echo "TF_VAR_AGGREGATION_VERSION=$GITHUB_SHA" >> "$GITHUB_ENV"

      - name: Plan
        run: terraform plan -input=false -out=terraform.plan

      - name: Apply
        run: terraform apply -input=false terraform.plan
        if: github.ref == 'refs/heads/main'
